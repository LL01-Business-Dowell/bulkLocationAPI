version: "3.9"

services:
  zookeeper:

    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    restart: always
    networks:
      - queue-net

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - '9092:9092'
    restart: always
    networks:
      - queue-net
  ws-server:
    build:
      context: ./ws-server
      dockerfile: docker/Development/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    restart: always
    env_file:
      - ./.env.development
    networks:
      - queue-net

  django-api-server:
    build:
      context: ./django-api-server
      dockerfile: docker/Development/Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - kafka
    restart: always
    env_file:
      - ./.env.development
    networks:
      - queue-net
  node-db-server:
    build:
      context: ./node-db-server
      dockerfile: docker/Development/Dockerfile
    depends_on:
      - kafka
    networks:
      - queue-net
    restart: always
  # django-db-server:
  #   build:
  #     context: ./django-db-server
  #     dockerfile: docker/Development/Dockerfile
  #   ports:
  #     - "8001:8001"
  #   depends_on:
  #     - kafka
  #   restart: always
  #   env_file:
  #     - ./.env.development
  #   networks:
  #     - queue-net
  # db:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_PASSWORD: your_postgres_password 
  #   ports:
  #     - "5432:5432"

networks:
  queue-net:
    driver: bridge
volumes:
  kafka_data:
